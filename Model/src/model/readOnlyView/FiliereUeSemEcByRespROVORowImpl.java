package model.readOnlyView;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 13 17:07:27 UTC 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FiliereUeSemEcByRespROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdFiliereUeSemstreEc {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getIdFiliereUeSemstreEc();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdFiliereUeSemstre {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getIdFiliereUeSemstre();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Codification {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getCodification();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdEc {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getIdEc();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdMaquette {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getIdMaquette();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdParcoursMaquetAnnee {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getIdParcoursMaquetAnnee();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibelleLong {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getLibelleLong();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdUtilisateur {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getIdUtilisateur();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        isSelected {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getisSelected();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setisSelected((Boolean) value);
            }
        }
        ,
        isEcSelected {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getisEcSelected();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setisEcSelected((Boolean) value);
            }
        }
        ,
        PrcrsMaquetteAnROVO {
            protected Object get(FiliereUeSemEcByRespROVORowImpl obj) {
                return obj.getPrcrsMaquetteAnROVO();
            }

            protected void put(FiliereUeSemEcByRespROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected abstract Object get(FiliereUeSemEcByRespROVORowImpl object);

        protected abstract void put(FiliereUeSemEcByRespROVORowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDFILIEREUESEMSTREEC = AttributesEnum.IdFiliereUeSemstreEc.index();
    public static final int IDFILIEREUESEMSTRE = AttributesEnum.IdFiliereUeSemstre.index();
    public static final int CODIFICATION = AttributesEnum.Codification.index();
    public static final int IDEC = AttributesEnum.IdEc.index();
    public static final int IDMAQUETTE = AttributesEnum.IdMaquette.index();
    public static final int IDPARCOURSMAQUETANNEE = AttributesEnum.IdParcoursMaquetAnnee.index();
    public static final int LIBELLELONG = AttributesEnum.LibelleLong.index();
    public static final int IDUTILISATEUR = AttributesEnum.IdUtilisateur.index();
    public static final int ISSELECTED = AttributesEnum.isSelected.index();
    public static final int ISECSELECTED = AttributesEnum.isEcSelected.index();
    public static final int PRCRSMAQUETTEANROVO = AttributesEnum.PrcrsMaquetteAnROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FiliereUeSemEcByRespROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute IdFiliereUeSemstreEc.
     * @return the IdFiliereUeSemstreEc
     */
    public Long getIdFiliereUeSemstreEc() {
        return (Long) getAttributeInternal(IDFILIEREUESEMSTREEC);
    }

    /**
     * Gets the attribute value for the calculated attribute IdFiliereUeSemstre.
     * @return the IdFiliereUeSemstre
     */
    public Long getIdFiliereUeSemstre() {
        return (Long) getAttributeInternal(IDFILIEREUESEMSTRE);
    }

    /**
     * Gets the attribute value for the calculated attribute Codification.
     * @return the Codification
     */
    public String getCodification() {
        return (String) getAttributeInternal(CODIFICATION);
    }

    /**
     * Gets the attribute value for the calculated attribute IdEc.
     * @return the IdEc
     */
    public Long getIdEc() {
        return (Long) getAttributeInternal(IDEC);
    }

    /**
     * Gets the attribute value for the calculated attribute IdMaquette.
     * @return the IdMaquette
     */
    public Long getIdMaquette() {
        return (Long) getAttributeInternal(IDMAQUETTE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdParcoursMaquetAnnee.
     * @return the IdParcoursMaquetAnnee
     */
    public Long getIdParcoursMaquetAnnee() {
        return (Long) getAttributeInternal(IDPARCOURSMAQUETANNEE);
    }

    /**
     * Gets the attribute value for the calculated attribute LibelleLong.
     * @return the LibelleLong
     */
    public String getLibelleLong() {
        return (String) getAttributeInternal(LIBELLELONG);
    }

    /**
     * Gets the attribute value for the calculated attribute IdUtilisateur.
     * @return the IdUtilisateur
     */
    public Long getIdUtilisateur() {
        return (Long) getAttributeInternal(IDUTILISATEUR);
    }

    /**
     * Gets the attribute value for the calculated attribute isSelected.
     * @return the isSelected
     */
    public Boolean getisSelected() {
        return (Boolean) getAttributeInternal(ISSELECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isSelected.
     * @param value value to set the  isSelected
     */
    public void setisSelected(Boolean value) {
        setAttributeInternal(ISSELECTED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute isEcSelected.
     * @return the isEcSelected
     */
    public Boolean getisEcSelected() {
        return (Boolean) getAttributeInternal(ISECSELECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isEcSelected.
     * @param value value to set the  isEcSelected
     */
    public void setisEcSelected(Boolean value) {
        setAttributeInternal(ISECSELECTED, value);
    }


    /**
     * Gets the associated <code>PrcrsMaquetteAnROVORowImpl</code> using master-detail link PrcrsMaquetteAnROVO.
     */
    public PrcrsMaquetteAnROVORowImpl getPrcrsMaquetteAnROVO() {
        return (PrcrsMaquetteAnROVORowImpl) getAttributeInternal(PRCRSMAQUETTEANROVO);
    }

    /**
     * Sets the master-detail link PrcrsMaquetteAnROVO between this object and <code>value</code>.
     */
    public void setPrcrsMaquetteAnROVO(PrcrsMaquetteAnROVORowImpl value) {
        setAttributeInternal(PRCRSMAQUETTEANROVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

