package model.services.common;

import java.util.HashMap;
import java.util.List;

import model.entities.java.NiveauSection;

import model.entities.java.ScolParcours;

import oracle.jbo.ApplicationModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 26 13:03:08 UTC 2022
// ---------------------------------------------------------------------
public interface gestdapApp extends ApplicationModule {
    List<Long> getSelectedParcours();

    Long integrateForm(String anc_code, String libelle, String departement, String type_fr, String payante,
                       String presentielle, String grade_fr, String mention, String ouvert, String valide,
                       String professionalisante, String cycl, String reconnue, String obs, String spec, String opt,
                       Integer utilisateur);

    Long integrateNiveauForm(String anc_code, String libelle, String abrev, String a_select, String aut_permise,
                             String presentielle, String nbr_insc_permis, String diplomante, String formation,
                             String ouvert, String niveau, Integer utilisateur);

    Long integrateNiveauFormCrt(Long niv_fr, String crt_code, String actif, String nbr_etd, Integer utilisateur);

    Long integrateNiveauFormPrcrs(Long fr_id, Long niv_form_crt, String spec, String opt, Integer utilisateur);


    Long createOrUpdateNivFormMaqAnn(Long niv_form, Long mq, Long an, Integer utilisateur);

    Long createOrUpdatePrcrsMaqAnn(Long parcours, Long mq, Long an, Integer utilisateur);


    Long createOrUpdateUe(String anc_code, String libelle, String prefix, String com, Integer utilisateur);


    Long createOrUpdateEc(String anc_code, String libelle, Integer utilisateur);


    Long createOrUpdateFilUe(String anc_code, Long ue_id, Long sem_id, String cat_ue_id, String codif, Long cred,
                             Float coef, Long maq, Integer moy_v, Integer moy_e, String nat, String comp,
                             Integer utilisateur);

    Long createOrUpdateFilEc(String anc_code, Long ec_id, String nat, String codif, Float coef, Float moy_v,
                             Float moy_e, Float cc, Float ct, Long fus, String hcm, String htd, String htp, String htpe,
                             String hs, Integer utilisateur);


    Long createOrUpdateUserForm(Long user_, String role, Long form_, Integer utilisateur);

    Long createOrUpdateUserNivForm(Long user_, String role, Long niv_form_, Integer utilisateur);

    void getMaquetteStruct(Long strId);

    Long createOrUpdateUser(String matricule, String struct_, Integer utilisateur);

    Long getNiveau(String anc_code);

    Long getgradeFormation(String anc_code);

    Integer isCalendrierExist(Long niv_crt_id, Long sem_id, Long an_id);


    Long createOrUpdateEtudiant(String num_etd, String num_table, Integer utilisateur);

    Long createOrUpdateInsAdmin(Long etu_id, String tfr_anc_code, String gfr_anc_code, Long an_id, Integer ins_en_ligne,
                                Integer utilisateur);


    Long createOrUpdateInsPedSem(Long ins_ped, Long sem_id, String ins_pd_valide, String pass_exam, String cumul_cred,
                                 String dette_cred, Integer utilisateur);

    Long createOrUpdateInsPedSemUe(Long ins_ped_sem_id, Long fil_ue_id, Integer utilisateur);

    Long createOrUpdateInsPed(Long ins_ad_id, String h_td, String stat, String opt, String crt, String motif,
                              String rdblmt, String etat_ins, String quitance, String nbr_insc, String pm_dl_insc,
                              String crt_tire, String ord_inc, String cde_a_cons, String dte_edi_crt, Long prcrs_mq_an,
                              String ins_en_ligne, Integer utilisateur);

    List<Long> getSelectedEtudiant();


    Long getInspedSem(Long ins_ped, Long sem_id);

    Integer CreateOrUpdateUserRole(Long user_id, Long role_id, Integer utilisateur);


    void DeleteUserRole(Long user_id, Long role_id);


    Long createOrUpdateDept(String anc_code, String lib, String abrev, Long str_id, Integer utilisateur);

    Long CreateOrUpdateDisiForm(Long hs, Integer utilisateur);

    Long CreateOrUpdateDisiNivFormCohrte(Long nfr_id, Integer utilisateur);

    Long CreateOrUpdateDisiNivFormation(Long fr_id, Integer utilisateur);

    Long CreateOrUpdateDisiUser(String log, Long str_id, Integer utilisateur);


    Long CreateOrUpdateDisiNivFormPrcrs(Long nfr_crt_id, Integer utilisateur);

    Long CreateOrUpdateDisiDept(Long str_id, Integer utilisateur);


    String getrole(Long role_id);

    String getusername(Long user_id);

    Integer getCountFilEc(Long an_id, Long prcrs_id, Long sem_id);


    Long getResponsableFr(Long fr_id);

    Long getResponsableNvFr(Long niv_fr_id);

    Long createOrUpdateUserForm1(Long user_, String role, Long form_, Integer utilisateur);


    Long getUserResponsableFr(Long u_fr_id);

    Long createOrUpdateUserNivForm1(Long user_, String role, Long niv_form_, Integer utilisateur);


    Long getUserResponsableNivFr(Long u_nfr_id);


    Long getResponsableFilEc(Long fil_ec_id, Long pma);

    Long getResponsableFilUe(Long fil_ue_id, Long pma);


    Long getUserResponsableFilEc(Long u_fil_ec_id);

    Long getUserResponsableFilUe(Long u_fil_ue_id);


    Long createOrUpdateUserFilEc(Long user_, String role, Long fil_ec_, Long pma_, Integer utilisateur);

    Long createOrUpdateUserFilEc1(Long user_, String role, Long fil_ec_, Long pma_, Integer utilisateur);

    Long createOrUpdateUserFilUe(Long user_, String role, Long fil_ue_, Long pma_, Integer utilisateur);

    Long createOrUpdateUserFilUe1(Long user_, String role, Long fil_ue_, Long pma_, Integer utilisateur);


    List<Long> getSelecteduser();


    List<Long> getSelectedNiveaux();

    Long CreateOrUpdateModeCntrlEC(Long fil_ec, Long tc, Long mc, Long pma, Integer coef, Integer utilisateur);


    Long CreateOrUpdateDeptByNiveau(String niv_sec, Integer utilisateur);


    List<NiveauSection> getSelectedNiveauSections();


    Long getParcoursMaquetteAnnee(Long parcours, Long annee);


    List<Long> getSelectedRole();


    Integer getUtiRoles(String username);

    Integer ValidateMaquette(Long maq_id, Long an_id, Long parcours, Integer utilisateur);

    Long createOrUpdateStruct(String anc_code, String lib, String abrev, String tel, String addr, String type_etab,
                              String grh_code, Integer utilisateur);


    String getMatricule(Long utilisateur);

    Long CreateOrUpdateGrdSemestre(Long niv_id, Long sem_id, Long gf_id, Integer utilisateur);

    Long CreateOrUpdateFormByNiv(String niv_sec, String form_, Integer utilisateur);


    Integer CreateOrUpdateCalendar(Long niv_crt_id, Long sem_id, Long an_id, Integer utilisateur, Integer sess_id);


    void UpdateResultatSemAdm(Long prcrs, Long annee, Long utilisateur);


    List<ScolParcours> getSelectedScolParcours();

    Long integrateNiveauFormOpt(Long niv_fr, Long niv_fr_spec, String opt_code, Integer utilisateur);

    Long integrateNiveauFormSpec(Long niv_fr, String spec_code, Integer utilisateur);


    Long integrateNivFormPrcrs(Long niv_form_crt, Long niv_form_spec, Long niv_form_opt, Integer utilisateur);


    void testType();


    Long isAncMaquetteExiste(Long annee, String code_niv_sec, String code_fr);

    Long generateMaquette(Long niv_form_prcrt, Long str_id, Long annee_id, String code_niv_sec, String op_code,
                          String code_fr, Integer utilisateur);

    void ImportEtudiants(Long prcrs, String code_niv_s, Long annee, String code_op, String code_fr, Long utilisateur);


    Long IsMaquetteValidated(Long prcrs, Long an_id, String mq_id);

    Integer TotalImpoted(Long prcrs, String code_niv_s, String code_fr);

    List<Long> generateMaquetteRec(Long niv_form_prcrt, Long str_id, Long annee_id, String code_niv_sec, String op_code,
                                   String fr_code, Integer utilisateur);


    Long CreateOrUpdateMaqExcel(String libelle, Long str, Integer utilisateur);

    Long createOrUpdateEcExcel(String libelle, Integer utilisateur);

    Long createOrUpdateFilEcExcel(Long ec_id, Long nat, String codif, Float coef, Float moy_v, Float moy_e, Float cc,
                                  Float ct, Long fus, String hcm, String htd, String htp, String htpe, String hs,
                                  Integer utilisateur);

    Long createOrUpdateFilUeExcel(Long ue_id, Long sem_id, Long cat_ue_id, String codif, Long cred, Float coef,
                                  Long maq, Integer moy_v, Integer moy_e, Long nat, Integer comp, Integer is_sout,
                                  Integer utilisateur);

    Long createOrUpdateUeExcel(String libelle, Integer utilisateur);


    Long CreateOrUpdateNivFormByNiv(String niv_sec, String form_, Long id_fr, Integer utilisateur);

    Integer getCountFilUe(Long prcrs_id, Long sem_id);


    Long UpdateResponsableFr(Long p_old, Long p_new, Long p_fr, Integer p_user);


    Long getUserRespFr(Long fr_id);

    Long UpdateResponsableNivFr(Long p_old, Long p_new, Long p_niv_fr, Integer p_user);


    Long getUserRespNivFr(Long niv_fr_id);


    Long getUserRespFilEc(Long fil_ec_id, Long pma_id);

    Long getUserRespFilUe(Long fil_ue_id, Long pma_id);


    Long UpdateResponsableEc(Long p_old, Long p_new, Long p_ec_id, Long pma_id, Integer p_user);

    Long UpdateResponsableUe(Long p_old, Long p_new, Long p_ue_id, Long pma_id, Integer p_user);


    Integer isCCExiste(Long prcrs_id);

    Integer getCountFilEcMaq(Long prcrs_id);

    Integer getCountFilUeMaq(Long prcrs_id);


    void DeleteCCUpdatePrc(Long pma_id, Long str_id);


    Integer IsValidatedMaquette(Integer mqId, Integer AnId, Integer prcrsId);

    void AllowAccesFr(Long utilisateur);

    void AllowAccesNFr(Long utilisateur);

    Long createUser(String login, Long str_id, Long p_id, Integer utilisateur);

    Long createUserDet(Long deptId, Long userId, String role, Integer utilisateur);


    void CloturerInscription(Long p_an, Long p_niv, Integer p_type, Long p_uti);


    void UpdateToMailSem(Long rsem_id);


    boolean genererJetonEtEnvoyerEmail(String username);


    Integer IsOneInterClosed(Long prcrs, Long an_id, String mq_id);

    void ImportEtudiantsSup(Long prcrs, String code_niv_s, Long annee, String code_op, String code_fr,
                            Long utilisateur);

    void UpdateToMail(Long pm_id, Long cal_id);

    HashMap<String, String> getSelectedFilUe();

    void synchWithScol(String numEtu);
}

