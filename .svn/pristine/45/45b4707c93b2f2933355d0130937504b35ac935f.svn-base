package model.readOnlyView;

import java.math.BigDecimal;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 21 15:42:40 UTC 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InscExoEcolageROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdAnneesUnivers {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdExoneration {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdInscriptionPedagogique {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdMotifExoneration {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdNatureExoneration {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdTypeExoneration {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Montant {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RefExo {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Taux {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibMotif {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibNature {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibTypeExo {
            protected Object get(InscExoEcolageROVORowImpl obj) {
                return obj.getAttributeInternal(index());
            }

            protected void put(InscExoEcolageROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(InscExoEcolageROVORowImpl object);

        protected abstract void put(InscExoEcolageROVORowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int IDANNEESUNIVERS = AttributesEnum.IdAnneesUnivers.index();
    public static final int IDEXONERATION = AttributesEnum.IdExoneration.index();
    public static final int IDINSCRIPTIONPEDAGOGIQUE = AttributesEnum.IdInscriptionPedagogique.index();
    public static final int IDMOTIFEXONERATION = AttributesEnum.IdMotifExoneration.index();
    public static final int IDNATUREEXONERATION = AttributesEnum.IdNatureExoneration.index();
    public static final int IDTYPEEXONERATION = AttributesEnum.IdTypeExoneration.index();
    public static final int MONTANT = AttributesEnum.Montant.index();
    public static final int REFEXO = AttributesEnum.RefExo.index();
    public static final int TAUX = AttributesEnum.Taux.index();
    public static final int LIBMOTIF = AttributesEnum.LibMotif.index();
    public static final int LIBNATURE = AttributesEnum.LibNature.index();
    public static final int LIBTYPEEXO = AttributesEnum.LibTypeExo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InscExoEcolageROVORowImpl() {
    }
}

