package model.services.common;

import java.util.HashMap;
import java.util.List;

import model.updatableview.common.TableEtudiantsemestre;

import model.readOnlyView.common.RValidation;

import oracle.jbo.ApplicationModule;
import oracle.jbo.RowSetIterator;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 13 09:07:23 UTC 2020
// ---------------------------------------------------------------------
public interface evaluationApp extends ApplicationModule {

    void InitialiserNoteModeEns(Integer fil_ue_sem_ec, Integer calendrier_deliberation, Integer utilisateur);

    void initialiserNoteModeEnsFiliere(Integer anne_univers, Integer niv_fomr_parcours, Integer session_id,
                                       Integer utilisateur);


    Integer isCosedAllSemestre(Integer parcours, Integer annee, Integer session);


    Integer isPublishedAllSemestre(Integer parcours, Integer annee, Integer session);

    RowSetIterator DeliberationAnnuelle(Integer anne, Integer parcours, Integer session);

    void calculMoyenneSemestrielle(Long calendrier, Long utilisateur);


    Integer isClosedAllUe(Integer parcours, Integer calendrier, Integer semestre);

    Integer isDelibratedSemestre(Long parcours, Long calendrier);


    Integer clotureSaisieNotes(Long fil_sem_ec, Long type_control, Long calendrier, String action, Long utilisateur);

    Integer clotureSaisieNotesInter(Long fil_sem_ec, Long type_control, Long mode_control, Long calendrier,
                                    String action, Long utilisateur);


    void findAndUpdateNote(Long idNoteModeEns, Float note);

    void findAndUpdateNoteInter(Long idNoteModeEnsInter, Float note);

    void getNotesEtudiants(Long type_ctrl_ec, Long id_cal_del);

    void getNotesEtudiantsModeEns(Long type_ctrl, Long id_cal_del);

    Integer isClosedSaisieNotesInter(Long fil_sem_ec, Long type_control, Long mode_control, Long calendrier);

    Integer nbrColonneUe();

    Integer isClosedSaisieNotes(Long fil_sem_ec, Long type_control, Long calendrier);

    Integer clotureUe(Long fil_ue, Long calendrier, String action, Long utilisateur);


    Integer isClosedUe(Long fileUesem, Long calendrier);

    Integer isDelibrateUe(Long fileUesem, Long calendrier);


    Integer deliberationUe(Long fil_ue, Long calendrier, String action, Long utilisateur);


    //void calculMoyenneSemestrielle(Long calendrier, Long utilisateur);

    //Integer clotureSemestre(Long parcours, Long calendrier, Long semestre, String action, Long utilisateur);

    //Integer isClosedAnnee(Long parcours, Long calendrier);

    Integer isClosedSemestre(Long parcours, Long calendrier);

    //Integer isDelibratedSemestre(Long parcours, Long calendrier);


    Integer isCompensedSemestre(Integer parcours, Integer calendrier);


    Integer delibererSemestre(Integer parcours, Integer calendrier, Integer semestre, String action,
                              Integer utilisateur);

    Integer isClosedAnnee(Integer parcours, Integer calendrier);

    Integer closeSemestre(Integer parcours, Integer calendrier, Integer semestre, String action, Integer utilisateur);

    Integer delibereUe(Integer fil_ue, Integer calendrier, String action, Integer utilisateur);

    Integer isCosedAllNoteModeEns(Integer fil_ue, Integer calendrier);

    Integer isCosedUe(Integer fil_ue, Integer calendrier);

    void calculMoyenneUe(Integer calendrier, Integer fileUesem, Integer utilisateur);

    Integer ClosedUe(Integer fil_ue, Integer calendrier, String action, Integer utilisateur);

    List<Long> addSelectedToGroupe();

    List<Long> getSelectedNiveauFormations();

    List<Long> getSelectedUsers();

    List<Long> getSelectedUes();

    List<Long> getSelectedEcs();

    List<Long> getSelectedJury();

    void UpdateRole(Integer idUser, Integer idJury, String role, Integer utimodif);

    void UpdateResponsableEc(Integer idUser, Integer idFilEc, String role, Integer utimodif, Integer id_uti_fil_ec);

    void UpdateResponsableUe(Integer idUser, Integer idFilUe, String role, Integer utimodif, Integer id_uti_fil_ue);


    Integer CompenserSemestre(Integer parcours, Integer calendrier, Integer semestre, String action,
                              Integer utilisateur);

    void compenser(Integer parcours, Integer anne, Integer calendrier, Integer utilisateur);

    void UpdateResultat(Integer anne_univers, Integer parcours, Integer utilisateur);

    List<Long> getSelectedLois();

    List<Long> getSelectedParcours();

    void initAno(Integer id_ano);

    void CalculMoyenneEcFinalProc(Integer anne, Integer semestre, Integer parcours, Integer fileUesem,
                                  Integer idFilieUeSemEc, Integer calendrDelib, Integer utilisateur);

    void SortByCredit(Integer credit1, Integer credit2);

    void SortByMoyenne(Integer moyenne1, Integer moyenne2);

    void calculMoyenneEc(Integer anne, Integer semestre, Integer parcours, Integer fileUesem, Integer idFilieUeSemEc,
                         Integer typeControle, Integer calendrDelib, Integer utilisateur);

    void reconduireRedoublantToSess2(Integer anne_univers, Integer niv_fomr_parcours, Integer session_id,
                                     Integer utilisateur);

    void CalculMoyenneAnnuel(Integer anne_univers, Integer parcours, Integer utilisateur);

    Integer getIdAnonymat(Long parcours, Long anne, Long semestre, Long sessions);

    Integer isGenereAnonymat(Long parcours, Long anne, Long semestre, Long sessions);

    void deleteRuleNivParc(Integer id_niv_reg_parc);

    Integer publishSemestre(Integer parcours, Integer calendrier, Integer semestre, String action, Integer utilisateur);

    Integer publierAnnee(Integer parcours, Integer calendrier, String action, Integer utilisateur);

    void reconduireToSess2(Integer anne_univers, Integer niv_fomr_parcours, Integer session_id, Integer semestre_id,
                           Integer utilisateur);

    Integer reouvrirSaisieNotes(Long parcours, Long fil_ue, Long fil_sem_ec, Long type_control, Long calendrier,
                                Long utilisateur);

    Integer reouvrirSaisieNotesInter(Long parcours, Long fil_ue, Long fil_sem_ec, Long type_control, Long mode_control,
                                     Long calendrier, Long utilisateur);

    Integer isJuryDefined(Integer parcours, Integer annee, Integer sess, Integer semestre);

    void traitementEnjambiste(Integer niv_fomr_parcours, Integer anne_univers, Integer utilisateur);

    void UpdateFormationAccess(Integer id_acces, String role, Integer utimodif);

    void DeleteFormationAccess(Integer id_acces);

    void AllowRoleTo(Integer role_id, Integer uti_id, Integer uticre);

    void UpdateUserRole(Integer user_role_id, Integer uti_id, Integer uti_modif);
}
