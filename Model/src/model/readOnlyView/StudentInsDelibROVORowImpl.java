package model.readOnlyView;

import java.sql.Timestamp;

import model.updatableview.InscriptionsPedagogiquesVORowImpl;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 19 16:53:52 UTC 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StudentInsDelibROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdInscriptionPedagogique {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getIdInscriptionPedagogique();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdParcoursMaquetAnnee {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getIdParcoursMaquetAnnee();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdNiveauFormationParcours {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getIdNiveauFormationParcours();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Numero {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getNumero();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Prenoms {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getPrenoms();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Nom {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getNom();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DateNaissance {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getDateNaissance();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LieuNaissance {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getLieuNaissance();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        isDlbrleStd {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getisDlbrleStd();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setisDlbrleStd((Boolean) value);
            }
        }
        ,
        InscriptionsPedagogiquesVO {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getInscriptionsPedagogiquesVO();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ParcoursInscDelibROVO {
            protected Object get(StudentInsDelibROVORowImpl obj) {
                return obj.getParcoursInscDelibROVO();
            }

            protected void put(StudentInsDelibROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(StudentInsDelibROVORowImpl object);

        protected abstract void put(StudentInsDelibROVORowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDINSCRIPTIONPEDAGOGIQUE = AttributesEnum.IdInscriptionPedagogique.index();
    public static final int IDPARCOURSMAQUETANNEE = AttributesEnum.IdParcoursMaquetAnnee.index();
    public static final int IDNIVEAUFORMATIONPARCOURS = AttributesEnum.IdNiveauFormationParcours.index();
    public static final int NUMERO = AttributesEnum.Numero.index();
    public static final int PRENOMS = AttributesEnum.Prenoms.index();
    public static final int NOM = AttributesEnum.Nom.index();
    public static final int DATENAISSANCE = AttributesEnum.DateNaissance.index();
    public static final int LIEUNAISSANCE = AttributesEnum.LieuNaissance.index();
    public static final int ISDLBRLESTD = AttributesEnum.isDlbrleStd.index();
    public static final int INSCRIPTIONSPEDAGOGIQUESVO = AttributesEnum.InscriptionsPedagogiquesVO.index();
    public static final int PARCOURSINSCDELIBROVO = AttributesEnum.ParcoursInscDelibROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StudentInsDelibROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute IdInscriptionPedagogique.
     * @return the IdInscriptionPedagogique
     */
    public Long getIdInscriptionPedagogique() {
        return (Long) getAttributeInternal(IDINSCRIPTIONPEDAGOGIQUE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdParcoursMaquetAnnee.
     * @return the IdParcoursMaquetAnnee
     */
    public Long getIdParcoursMaquetAnnee() {
        return (Long) getAttributeInternal(IDPARCOURSMAQUETANNEE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdNiveauFormationParcours.
     * @return the IdNiveauFormationParcours
     */
    public Long getIdNiveauFormationParcours() {
        return (Long) getAttributeInternal(IDNIVEAUFORMATIONPARCOURS);
    }

    /**
     * Gets the attribute value for the calculated attribute Numero.
     * @return the Numero
     */
    public String getNumero() {
        return (String) getAttributeInternal(NUMERO);
    }

    /**
     * Gets the attribute value for the calculated attribute Prenoms.
     * @return the Prenoms
     */
    public String getPrenoms() {
        return (String) getAttributeInternal(PRENOMS);
    }

    /**
     * Gets the attribute value for the calculated attribute Nom.
     * @return the Nom
     */
    public String getNom() {
        return (String) getAttributeInternal(NOM);
    }

    /**
     * Gets the attribute value for the calculated attribute DateNaissance.
     * @return the DateNaissance
     */
    public Timestamp getDateNaissance() {
        return (Timestamp) getAttributeInternal(DATENAISSANCE);
    }

    /**
     * Gets the attribute value for the calculated attribute LieuNaissance.
     * @return the LieuNaissance
     */
    public String getLieuNaissance() {
        return (String) getAttributeInternal(LIEUNAISSANCE);
    }

    /**
     * Gets the attribute value for the calculated attribute isDlbrleStd.
     * @return the isDlbrleStd
     */
    public Boolean getisDlbrleStd() {
        //return (Boolean) getAttributeInternal(ISDLBRLESTD);
        if(this.getInscriptionsPedagogiquesVO().getIsDelibarable() == 1)
            return true;
        return false;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isDlbrleStd.
     * @param value value to set the  isDlbrleStd
     */
    public void setisDlbrleStd(Boolean value) {
        setAttributeInternal(ISDLBRLESTD, value);
        if(value)
            this.getInscriptionsPedagogiquesVO().setIsDelibarable(1);
        else    
            this.getInscriptionsPedagogiquesVO().setIsDelibarable(0);
    }

    /**
     * Gets the associated <code>InscriptionsPedagogiquesVORowImpl</code> using master-detail link InscriptionsPedagogiquesVO.
     */
    public InscriptionsPedagogiquesVORowImpl getInscriptionsPedagogiquesVO() {
        return (InscriptionsPedagogiquesVORowImpl) getAttributeInternal(INSCRIPTIONSPEDAGOGIQUESVO);
    }

    /**
     * Sets the master-detail link InscriptionsPedagogiquesVO between this object and <code>value</code>.
     */
    public void setInscriptionsPedagogiquesVO(InscriptionsPedagogiquesVORowImpl value) {
        setAttributeInternal(INSCRIPTIONSPEDAGOGIQUESVO, value);
    }

    /**
     * Gets the associated <code>ParcoursInscDelibROVORowImpl</code> using master-detail link ParcoursInscDelibROVO.
     */
    public ParcoursInscDelibROVORowImpl getParcoursInscDelibROVO() {
        return (ParcoursInscDelibROVORowImpl) getAttributeInternal(PARCOURSINSCDELIBROVO);
    }

    /**
     * Sets the master-detail link ParcoursInscDelibROVO between this object and <code>value</code>.
     */
    public void setParcoursInscDelibROVO(ParcoursInscDelibROVORowImpl value) {
        setAttributeInternal(PARCOURSINSCDELIBROVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

