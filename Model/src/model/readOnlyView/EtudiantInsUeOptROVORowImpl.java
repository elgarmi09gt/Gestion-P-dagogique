package model.readOnlyView;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Mar 12 09:43:02 UTC 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EtudiantInsUeOptROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Prenoms {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getPrenoms();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Nom {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getNom();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdEtudiant {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getIdEtudiant();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Numero {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getNumero();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdParcoursMaquetAnnee {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getIdParcoursMaquetAnnee();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdInscriptionPedagogique {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getIdInscriptionPedagogique();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        isSelected {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getisSelected();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setisSelected((Boolean) value);
            }
        }
        ,
        isEtdSelected {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getisEtdSelected();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setisEtdSelected((String) value);
            }
        }
        ,
        ParcousInscriptionUeOptROVO {
            protected Object get(EtudiantInsUeOptROVORowImpl obj) {
                return obj.getParcousInscriptionUeOptROVO();
            }

            protected void put(EtudiantInsUeOptROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(EtudiantInsUeOptROVORowImpl object);

        protected abstract void put(EtudiantInsUeOptROVORowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRENOMS = AttributesEnum.Prenoms.index();
    public static final int NOM = AttributesEnum.Nom.index();
    public static final int IDETUDIANT = AttributesEnum.IdEtudiant.index();
    public static final int NUMERO = AttributesEnum.Numero.index();
    public static final int IDPARCOURSMAQUETANNEE = AttributesEnum.IdParcoursMaquetAnnee.index();
    public static final int IDINSCRIPTIONPEDAGOGIQUE = AttributesEnum.IdInscriptionPedagogique.index();
    public static final int ISSELECTED = AttributesEnum.isSelected.index();
    public static final int ISETDSELECTED = AttributesEnum.isEtdSelected.index();
    public static final int PARCOUSINSCRIPTIONUEOPTROVO = AttributesEnum.ParcousInscriptionUeOptROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EtudiantInsUeOptROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Prenoms.
     * @return the Prenoms
     */
    public String getPrenoms() {
        return (String) getAttributeInternal(PRENOMS);
    }

    /**
     * Gets the attribute value for the calculated attribute Nom.
     * @return the Nom
     */
    public String getNom() {
        return (String) getAttributeInternal(NOM);
    }

    /**
     * Gets the attribute value for the calculated attribute IdEtudiant.
     * @return the IdEtudiant
     */
    public Long getIdEtudiant() {
        return (Long) getAttributeInternal(IDETUDIANT);
    }

    /**
     * Gets the attribute value for the calculated attribute Numero.
     * @return the Numero
     */
    public String getNumero() {
        return (String) getAttributeInternal(NUMERO);
    }

    /**
     * Gets the attribute value for the calculated attribute IdParcoursMaquetAnnee.
     * @return the IdParcoursMaquetAnnee
     */
    public Long getIdParcoursMaquetAnnee() {
        return (Long) getAttributeInternal(IDPARCOURSMAQUETANNEE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdInscriptionPedagogique.
     * @return the IdInscriptionPedagogique
     */
    public Long getIdInscriptionPedagogique() {
        return (Long) getAttributeInternal(IDINSCRIPTIONPEDAGOGIQUE);
    }

    /**
     * Gets the attribute value for the calculated attribute isSelected.
     * @return the isSelected
     */
    public Boolean getisSelected() {
        return (Boolean) getAttributeInternal(ISSELECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isSelected.
     * @param value value to set the  isSelected
     */
    public void setisSelected(Boolean value) {
        setAttributeInternal(ISSELECTED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute isEtdSelected.
     * @return the isEtdSelected
     */
    public String getisEtdSelected() {
        return (String) getAttributeInternal(ISETDSELECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isEtdSelected.
     * @param value value to set the  isEtdSelected
     */
    public void setisEtdSelected(String value) {
        setAttributeInternal(ISETDSELECTED, value);
    }

    /**
     * Gets the associated <code>ParcousInscriptionUeOptROVORowImpl</code> using master-detail link ParcousInscriptionUeOptROVO.
     */
    public ParcousInscriptionUeOptROVORowImpl getParcousInscriptionUeOptROVO() {
        return (ParcousInscriptionUeOptROVORowImpl) getAttributeInternal(PARCOUSINSCRIPTIONUEOPTROVO);
    }

    /**
     * Sets the master-detail link ParcousInscriptionUeOptROVO between this object and <code>value</code>.
     */
    public void setParcousInscriptionUeOptROVO(ParcousInscriptionUeOptROVORowImpl value) {
        setAttributeInternal(PARCOUSINSCRIPTIONUEOPTROVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

