package model.entities;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 19 11:01:09 GMT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SpecialitesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdSpecialite {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getIdSpecialite();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setIdSpecialite((DBSequence) value);
            }
        }
        ,
        LibelleLong {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getLibelleLong();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setLibelleLong((String) value);
            }
        }
        ,
        LibelleCourt {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getLibelleCourt();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setLibelleCourt((String) value);
            }
        }
        ,
        IdMention {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getIdMention();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setIdMention((DBSequence) value);
            }
        }
        ,
        DateCreation {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getDateCreation();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setDateCreation((Timestamp) value);
            }
        }
        ,
        DateModification {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getDateModification();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setDateModification((Timestamp) value);
            }
        }
        ,
        UtiCree {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getUtiCree();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setUtiCree((Long) value);
            }
        }
        ,
        UtiModifie {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getUtiModifie();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setUtiModifie((Long) value);
            }
        }
        ,
        IdD {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getIdD();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MentionsEO {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getMentionsEO();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setMentionsEO((MentionsEOImpl) value);
            }
        }
        ,
        FormationsSpecialitesEO {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getFormationsSpecialitesEO();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MentionsVO {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getMentionsVO();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FormationsSpecialitesVO {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getFormationsSpecialitesVO();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OptionsVO {
            protected Object get(SpecialitesEOImpl obj) {
                return obj.getOptionsVO();
            }

            protected void put(SpecialitesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(SpecialitesEOImpl object);

        protected abstract void put(SpecialitesEOImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDSPECIALITE = AttributesEnum.IdSpecialite.index();
    public static final int LIBELLELONG = AttributesEnum.LibelleLong.index();
    public static final int LIBELLECOURT = AttributesEnum.LibelleCourt.index();
    public static final int IDMENTION = AttributesEnum.IdMention.index();
    public static final int DATECREATION = AttributesEnum.DateCreation.index();
    public static final int DATEMODIFICATION = AttributesEnum.DateModification.index();
    public static final int UTICREE = AttributesEnum.UtiCree.index();
    public static final int UTIMODIFIE = AttributesEnum.UtiModifie.index();
    public static final int IDD = AttributesEnum.IdD.index();
    public static final int MENTIONSEO = AttributesEnum.MentionsEO.index();
    public static final int FORMATIONSSPECIALITESEO = AttributesEnum.FormationsSpecialitesEO.index();
    public static final int MENTIONSVO = AttributesEnum.MentionsVO.index();
    public static final int FORMATIONSSPECIALITESVO = AttributesEnum.FormationsSpecialitesVO.index();
    public static final int OPTIONSVO = AttributesEnum.OptionsVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SpecialitesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entities.SpecialitesEO");
    }


    /**
     * Gets the attribute value for IdSpecialite, using the alias name IdSpecialite.
     * @return the value of IdSpecialite
     */
    public DBSequence getIdSpecialite() {
        return (DBSequence) getAttributeInternal(IDSPECIALITE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IdSpecialite.
     * @param value value to set the IdSpecialite
     */
    public void setIdSpecialite(DBSequence value) {
        setAttributeInternal(IDSPECIALITE, value);
    }

    /**
     * Gets the attribute value for LibelleLong, using the alias name LibelleLong.
     * @return the value of LibelleLong
     */
    public String getLibelleLong() {
        return (String) getAttributeInternal(LIBELLELONG);
    }

    /**
     * Sets <code>value</code> as the attribute value for LibelleLong.
     * @param value value to set the LibelleLong
     */
    public void setLibelleLong(String value) {
        setAttributeInternal(LIBELLELONG, value);
    }

    /**
     * Gets the attribute value for LibelleCourt, using the alias name LibelleCourt.
     * @return the value of LibelleCourt
     */
    public String getLibelleCourt() {
        return (String) getAttributeInternal(LIBELLECOURT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LibelleCourt.
     * @param value value to set the LibelleCourt
     */
    public void setLibelleCourt(String value) {
        setAttributeInternal(LIBELLECOURT, value);
    }

    /**
     * Gets the attribute value for IdMention, using the alias name IdMention.
     * @return the value of IdMention
     */
    public DBSequence getIdMention() {
        return (DBSequence) getAttributeInternal(IDMENTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for IdMention.
     * @param value value to set the IdMention
     */
    public void setIdMention(DBSequence value) {
        setAttributeInternal(IDMENTION, value);
    }

    /**
     * Gets the attribute value for DateCreation, using the alias name DateCreation.
     * @return the value of DateCreation
     */
    public Timestamp getDateCreation() {
        return (Timestamp) getAttributeInternal(DATECREATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateCreation.
     * @param value value to set the DateCreation
     */
    public void setDateCreation(Timestamp value) {
        setAttributeInternal(DATECREATION, value);
    }

    /**
     * Gets the attribute value for DateModification, using the alias name DateModification.
     * @return the value of DateModification
     */
    public Timestamp getDateModification() {
        return (Timestamp) getAttributeInternal(DATEMODIFICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateModification.
     * @param value value to set the DateModification
     */
    public void setDateModification(Timestamp value) {
        setAttributeInternal(DATEMODIFICATION, value);
    }

    /**
     * Gets the attribute value for UtiCree, using the alias name UtiCree.
     * @return the value of UtiCree
     */
    public Long getUtiCree() {
        return (Long) getAttributeInternal(UTICREE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UtiCree.
     * @param value value to set the UtiCree
     */
    public void setUtiCree(Long value) {
        setAttributeInternal(UTICREE, value);
    }

    /**
     * Gets the attribute value for UtiModifie, using the alias name UtiModifie.
     * @return the value of UtiModifie
     */
    public Long getUtiModifie() {
        return (Long) getAttributeInternal(UTIMODIFIE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UtiModifie.
     * @param value value to set the UtiModifie
     */
    public void setUtiModifie(Long value) {
        setAttributeInternal(UTIMODIFIE, value);
    }


    /**
     * Gets the attribute value for IdD, using the alias name IdD.
     * @return the value of IdD
     */
    public Long getIdD() {
        return (Long) getAttributeInternal(IDD);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MentionsEOImpl.
     */
    public MentionsEOImpl getMentionsEO() {
        return (MentionsEOImpl) getAttributeInternal(MENTIONSEO);
    }

    /**
     * Sets <code>value</code> as the associated entity MentionsEOImpl.
     */
    public void setMentionsEO(MentionsEOImpl value) {
        setAttributeInternal(MENTIONSEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFormationsSpecialitesEO() {
        return (RowIterator) getAttributeInternal(FORMATIONSSPECIALITESEO);
    }

    /**
     * Uses the link MentionsToSpecialitesVL to return rows of SpecialitesVO
     */
    public ViewRowImpl getMentionsVO() {
        return (ViewRowImpl) getAttributeInternal(MENTIONSVO);
    }

    /**
     * Uses the link SpecialitesToFormationsSpecialitesVL to return rows of FormationsSpecialitesVO
     */
    public RowIterator getFormationsSpecialitesVO() {
        return (RowIterator) getAttributeInternal(FORMATIONSSPECIALITESVO);
    }

    /**
     * Uses the link SpectialiteToOption to return rows of OptionsVO
     */
    public RowIterator getOptionsVO() {
        return (RowIterator) getAttributeInternal(OPTIONSVO);
    }

    /**
     * @param idSpecialite key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence idSpecialite) {
        return new Key(new Object[] { idSpecialite });
    }


}

