package model.readOnlyView.common;

import java.math.BigDecimal;
import java.math.BigInteger;

import java.sql.SQLException;

import oracle.jbo.JboException;
import oracle.jbo.StructureDef;
import oracle.jbo.domain.Array;
import oracle.jbo.domain.DatumFactory;
import oracle.jbo.domain.DomainAttributeDef;
import oracle.jbo.domain.DomainInterface;
import oracle.jbo.domain.DomainOwnerInterface;
import oracle.jbo.domain.DomainStructureDef;
import oracle.jbo.domain.Struct;

import oracle.sql.*;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 07 12:33:52 GMT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TableTypePreinscrp extends Struct {
    static ORADataFactory[] mCustDatFac = null;
    static int[] mSQLTypes = null;
    static DomainStructureDef mStructureDef = null;
    static ORADataFactory fac;

    public TableTypePreinscrp(Datum value) throws SQLException {
        super(value);
    }

    public TableTypePreinscrp() throws SQLException {
    }

    public static ORADataFactory getORADataFactory() {
        if (fac == null) {
            class facClass implements ORADataFactory {
                public ORAData create(Datum d, int sql_type_code) throws SQLException {
                    if (d != null) {
                        return new TableTypePreinscrp(d);
                    }
                    return null;
                }
            }
            fac = new facClass();
        }
        return fac;
    }

    public int[] getAttrSQLTypes() {
        if (mSQLTypes == null) {
            mSQLTypes = buildAttrSQLTypes();
        }
        return mSQLTypes;
    }

    public StructureDef getStructureDef() {
        return mStructureDef;
    }

    public String getColumnType() {
        return "TABLE_TYPE_PREINSCRP";
    }

    public Array gettable_etud() {
        return (Array) getAttribute(0);
    }

    public void settable_etud(Array value) {
        setAttribute(0, value);
    }


    public void initStructureDef() {
        DomainAttributeDef[] attrs = new DomainAttributeDef[1];
        if (mStructureDef == null) {
            attrs[0] =
                new DomainAttributeDef("table_etud", "TABLE_ETUD", 0, Array.class, 0, "TABLE_TYPE_PREINSCRP", -127, 0,
                                       false, "model.readOnlyView.common.TypePreinscrp");
            mStructureDef = new DomainStructureDef(attrs);
        }
    }

    public ORADataFactory[] getAttrORADataFactories() {
        if (mCustDatFac == null) {
            mCustDatFac = new ORADataFactory[1];
            mCustDatFac[0] = Array.getORADataFactory();
        }
        return mCustDatFac;
    }
}

