package model.readOnlyView;

import java.util.Map;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCIteratorBinding;

import oracle.adf.share.ADFContext;

import oracle.binding.AttributeBinding;
import oracle.binding.BindingContainer;
import oracle.binding.OperationBinding;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 17 16:56:06 GMT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ListeInscPedAnnulDesistROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdInscriptionPedagogique {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getIdInscriptionPedagogique();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdInscriptionAdmin {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getIdInscriptionAdmin();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EtatInscrEtatInscrId {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getEtatInscrEtatInscrId();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdNiveauFormationParcours {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getIdNiveauFormationParcours();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdParcoursMaquetAnnee {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getIdParcoursMaquetAnnee();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibNivForm {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getLibNivForm();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibCourtNivForm {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getLibCourtNivForm();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Libelle {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getLibelle();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LibAnnee {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getLibAnnee();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdAnneesUnivers {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getIdAnneesUnivers();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        etat {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getetat();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setetat((Integer) value);
            }
        }
        ,
        AnnulerSuspendreLOV1 {
            protected Object get(ListeInscPedAnnulDesistROVORowImpl obj) {
                return obj.getAnnulerSuspendreLOV1();
            }

            protected void put(ListeInscPedAnnulDesistROVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(ListeInscPedAnnulDesistROVORowImpl object);

        protected abstract void put(ListeInscPedAnnulDesistROVORowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    Map sessionScope = ADFContext.getCurrent().getSessionScope();
    private String parcours = sessionScope.get("id_niv_form_parcours").toString();
    private String anne_univers = sessionScope.get("id_annee").toString();


    public static final int IDINSCRIPTIONPEDAGOGIQUE = AttributesEnum.IdInscriptionPedagogique.index();
    public static final int IDINSCRIPTIONADMIN = AttributesEnum.IdInscriptionAdmin.index();
    public static final int ETATINSCRETATINSCRID = AttributesEnum.EtatInscrEtatInscrId.index();
    public static final int IDNIVEAUFORMATIONPARCOURS = AttributesEnum.IdNiveauFormationParcours.index();
    public static final int IDPARCOURSMAQUETANNEE = AttributesEnum.IdParcoursMaquetAnnee.index();
    public static final int LIBNIVFORM = AttributesEnum.LibNivForm.index();
    public static final int LIBCOURTNIVFORM = AttributesEnum.LibCourtNivForm.index();
    public static final int LIBELLE = AttributesEnum.Libelle.index();
    public static final int LIBANNEE = AttributesEnum.LibAnnee.index();
    public static final int IDANNEESUNIVERS = AttributesEnum.IdAnneesUnivers.index();
    public static final int ETAT = AttributesEnum.etat.index();
    public static final int ANNULERSUSPENDRELOV1 = AttributesEnum.AnnulerSuspendreLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ListeInscPedAnnulDesistROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute IdInscriptionPedagogique.
     * @return the IdInscriptionPedagogique
     */
    public Long getIdInscriptionPedagogique() {
        return (Long) getAttributeInternal(IDINSCRIPTIONPEDAGOGIQUE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdInscriptionAdmin.
     * @return the IdInscriptionAdmin
     */
    public Long getIdInscriptionAdmin() {
        return (Long) getAttributeInternal(IDINSCRIPTIONADMIN);
    }

    /**
     * Gets the attribute value for the calculated attribute EtatInscrEtatInscrId.
     * @return the EtatInscrEtatInscrId
     */
    public Integer getEtatInscrEtatInscrId() {
        return (Integer) getAttributeInternal(ETATINSCRETATINSCRID);
    }

    /**
     * Gets the attribute value for the calculated attribute IdNiveauFormationParcours.
     * @return the IdNiveauFormationParcours
     */
    public Long getIdNiveauFormationParcours() {
        return (Long) getAttributeInternal(IDNIVEAUFORMATIONPARCOURS);
    }

    /**
     * Gets the attribute value for the calculated attribute IdParcoursMaquetAnnee.
     * @return the IdParcoursMaquetAnnee
     */
    public Long getIdParcoursMaquetAnnee() {
        return (Long) getAttributeInternal(IDPARCOURSMAQUETANNEE);
    }

    /**
     * Gets the attribute value for the calculated attribute LibNivForm.
     * @return the LibNivForm
     */
    public String getLibNivForm() {
        return (String) getAttributeInternal(LIBNIVFORM);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCourtNivForm.
     * @return the LibCourtNivForm
     */
    public String getLibCourtNivForm() {
        return (String) getAttributeInternal(LIBCOURTNIVFORM);
    }

    /**
     * Gets the attribute value for the calculated attribute Libelle.
     * @return the Libelle
     */
    public String getLibelle() {
        return (String) getAttributeInternal(LIBELLE);
    }

    /**
     * Gets the attribute value for the calculated attribute LibAnnee.
     * @return the LibAnnee
     */
    public String getLibAnnee() {
        return (String) getAttributeInternal(LIBANNEE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdAnneesUnivers.
     * @return the IdAnneesUnivers
     */
    public Long getIdAnneesUnivers() {
        return (Long) getAttributeInternal(IDANNEESUNIVERS);
    }

    /**
     * Gets the attribute value for the calculated attribute etat.
     * @return the etat
     */
    
    public BindingContainer getBindings() {
        return (BindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry();
    }

    public void setAnne_univers(String anne_univers) {
        this.anne_univers = anne_univers;
    }

    public String getAnne_univers() {
        return anne_univers;
    }

    public Integer getetat() {
        return (Integer) getAttributeInternal(ETAT);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute etat.
     * @param value value to set the  etat
     */
    public void setetat(Integer value) {
        setAttributeInternal(ETAT, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AnnulerSuspendreLOV1.
     */
    public RowSet getAnnulerSuspendreLOV1() {
        return (RowSet) getAttributeInternal(ANNULERSUSPENDRELOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

