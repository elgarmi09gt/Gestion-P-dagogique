package model.readOnlyView;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 12 12:33:26 CET 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EtudiantsRenonciationNoteRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdEtudiant {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getIdEtudiant();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Prenoms {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getPrenoms();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Nom {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getNom();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DateNaissance {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getDateNaissance();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LieuNaissance {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getLieuNaissance();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Numero {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getNumero();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdInscriptionPedSemUe {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getIdInscriptionPedSemUe();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Noteec {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getNoteec();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdCalendrierDeliberation {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getIdCalendrierDeliberation();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdParcoursMaquetAnnee {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getIdParcoursMaquetAnnee();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IdFiliereUeSemstreEc {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getIdFiliereUeSemstreEc();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        isEtdSelcted {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getisEtdSelcted();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setisEtdSelcted((Integer) value);
            }
        }
        ,
        DateRenonciation {
            protected Object get(EtudiantsRenonciationNoteRowImpl obj) {
                return obj.getDateRenonciation();
            }

            protected void put(EtudiantsRenonciationNoteRowImpl obj, Object value) {
                obj.setDateRenonciation((Date) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(EtudiantsRenonciationNoteRowImpl object);

        protected abstract void put(EtudiantsRenonciationNoteRowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDETUDIANT = AttributesEnum.IdEtudiant.index();
    public static final int PRENOMS = AttributesEnum.Prenoms.index();
    public static final int NOM = AttributesEnum.Nom.index();
    public static final int DATENAISSANCE = AttributesEnum.DateNaissance.index();
    public static final int LIEUNAISSANCE = AttributesEnum.LieuNaissance.index();
    public static final int NUMERO = AttributesEnum.Numero.index();
    public static final int IDINSCRIPTIONPEDSEMUE = AttributesEnum.IdInscriptionPedSemUe.index();
    public static final int NOTEEC = AttributesEnum.Noteec.index();
    public static final int IDCALENDRIERDELIBERATION = AttributesEnum.IdCalendrierDeliberation.index();
    public static final int IDPARCOURSMAQUETANNEE = AttributesEnum.IdParcoursMaquetAnnee.index();
    public static final int IDFILIEREUESEMSTREEC = AttributesEnum.IdFiliereUeSemstreEc.index();
    public static final int ISETDSELCTED = AttributesEnum.isEtdSelcted.index();
    public static final int DATERENONCIATION = AttributesEnum.DateRenonciation.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EtudiantsRenonciationNoteRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute IdEtudiant.
     * @return the IdEtudiant
     */
    public Long getIdEtudiant() {
        return (Long) getAttributeInternal(IDETUDIANT);
    }

    /**
     * Gets the attribute value for the calculated attribute Prenoms.
     * @return the Prenoms
     */
    public String getPrenoms() {
        return (String) getAttributeInternal(PRENOMS);
    }

    /**
     * Gets the attribute value for the calculated attribute Nom.
     * @return the Nom
     */
    public String getNom() {
        return (String) getAttributeInternal(NOM);
    }

    /**
     * Gets the attribute value for the calculated attribute DateNaissance.
     * @return the DateNaissance
     */
    public Timestamp getDateNaissance() {
        return (Timestamp) getAttributeInternal(DATENAISSANCE);
    }

    /**
     * Gets the attribute value for the calculated attribute LieuNaissance.
     * @return the LieuNaissance
     */
    public String getLieuNaissance() {
        return (String) getAttributeInternal(LIEUNAISSANCE);
    }

    /**
     * Gets the attribute value for the calculated attribute Numero.
     * @return the Numero
     */
    public String getNumero() {
        return (String) getAttributeInternal(NUMERO);
    }

    /**
     * Gets the attribute value for the calculated attribute IdInscriptionPedSemUe.
     * @return the IdInscriptionPedSemUe
     */
    public Long getIdInscriptionPedSemUe() {
        return (Long) getAttributeInternal(IDINSCRIPTIONPEDSEMUE);
    }

    /**
     * Gets the attribute value for the calculated attribute Noteec.
     * @return the Noteec
     */
    public BigDecimal getNoteec() {
        return (BigDecimal) getAttributeInternal(NOTEEC);
    }

    /**
     * Gets the attribute value for the calculated attribute IdCalendrierDeliberation.
     * @return the IdCalendrierDeliberation
     */
    public Long getIdCalendrierDeliberation() {
        return (Long) getAttributeInternal(IDCALENDRIERDELIBERATION);
    }

    /**
     * Gets the attribute value for the calculated attribute IdParcoursMaquetAnnee.
     * @return the IdParcoursMaquetAnnee
     */
    public Long getIdParcoursMaquetAnnee() {
        return (Long) getAttributeInternal(IDPARCOURSMAQUETANNEE);
    }

    /**
     * Gets the attribute value for the calculated attribute IdFiliereUeSemstreEc.
     * @return the IdFiliereUeSemstreEc
     */
    public Long getIdFiliereUeSemstreEc() {
        return (Long) getAttributeInternal(IDFILIEREUESEMSTREEC);
    }

    /**
     * Gets the attribute value for the calculated attribute isEtdSelcted.
     * @return the isEtdSelcted
     */
    public Integer getisEtdSelcted() {
        return (Integer) getAttributeInternal(ISETDSELCTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isEtdSelcted.
     * @param value value to set the  isEtdSelcted
     */
    public void setisEtdSelcted(Integer value) {
        setAttributeInternal(ISETDSELCTED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DateRenonciation.
     * @return the DateRenonciation
     */
    public Date getDateRenonciation() {
        return (Date) getAttributeInternal(DATERENONCIATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DateRenonciation.
     * @param value value to set the  DateRenonciation
     */
    public void setDateRenonciation(Date value) {
        setAttributeInternal(DATERENONCIATION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

