package model.services.common;

import java.util.List;

import model.readOnlyView.common.TableTypePreinscrp;

import oracle.jbo.ApplicationModule;
import oracle.jbo.RowSetIterator;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 18 18:11:57 GMT 2020
// ---------------------------------------------------------------------
public interface inscriptionApp extends ApplicationModule {

    Integer isEtudiant(Long id_pers);

    void getEtudiants(Long idpers);

    void getNouvBac(Long idpers);

    Integer isNouvBac(Long id_pers);

    Integer isNumEtudiant(String num_etud);


    String getIdPersCin(String cin);

    String getIdPersEtudiant(String num_etud);

    String getNumEtudiant(Long id_pers);

    Integer isNumCin(String num_cin);

    Integer nombrUeInsc(Long parcours, Long pers, Long semestre, Long annee, Long util);

    String getIdInscrpAdmin(Long type_form, Long annee, Long grade, Long id_etud);

    Integer isInscrpAdmin(Long type_form, Long annee, Long grade, Long id_etud);

    Integer isResultSem(Long id_ins_ped_sem);

    Integer isInsPedSemUe(Long id_ins_ped_sem);

    Integer isUeResultSemUe(Long id_ins_ped_sem_ue);

    Integer nombreResultSem(Long type_form, Long grade, Long id_etud);

    Integer isInsPedSem(Long id_ins_ped);


    void filterEtudiantsTd(String searchString, String selectedList);

    List<TableTypePreinscrp> getEudPreinscrption(Integer annee, Integer parcours);

    void fingAndUpdateInsPed(Long id_ins_ped, Long etat);


    Integer isAcquitePaiementEtud(Long id_ins_ped, Long id_annee, Long id_histo, Long valide);

    Integer getIdAnonymat(Long parcours, Long anne, Long semestre, Long sessions);

    void fingAndUpdateAutorise(Long id_aut, Integer valide);

    void findAndUpdateResultat(Long id_resultat, Long insc_ped_sup);

    void findAndPaieExoneration(Long id_insc_ped, Long droit_insc_adm, Long droit_insc_ped, Long cout_form);

    Integer isEtudEnRegleBu(Long id_struct, Long id_annee, Long id_etud);

    Integer isNumNouvBac(Long num_table, Long id_annee);

    String getIdPersBac(Long num_table, Long id_annee);

    void findAndUpdateInsPedVal(Long id_insc_ped_sem, Integer insc_ped_val);

    void findAndUpdateNationalite(Long id_pers, Long id_nouv_nat);

    void findAndUpdateEtud(Long id_etud, Long mobilite);

    Integer isApte(Long id_etud, Long id_annee);

    Integer isEnRegleBu(Long id_etud, Long id_annee, Long hs);

    Integer isEtudTic(Long id_etud, Long id_annee);

    Integer isInscPedVal(Long id_insc_ped);

    Integer isPaiementEtud(Long id_insc_ped, Long parcours, Long id_etud, Long id_annee);

    Integer isResponsableEtud(Long id_etud);

    RowSetIterator lesEtudInsc(Integer annee, Integer parcours, Integer session);

    Integer getNbreInsPed(Long id_etud, Long id_annee);

    Integer getNiveau(Long id_etud, Long id_annee);
}

